{"version":3,"sources":["containers/Home.js","actions/types.js","actions/auth.js","containers/Login.js","containers/Signup.js","containers/Activate.js","containers/ResetPassword.js","containers/ResetPasswordConfirm.js","reducers/auth.js","reducers/index.js","store.js","components/Navbar.js","hocs/Layout.js","App.js","index.js"],"names":["Home","className","class","to","role","LOGIN_SUCCESS","LOGIN_FAIL","SIGNUP_SUCCESS","SIGNUP_FAIL","ACTIVATION_SUCCESS","ACTIVATION_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","PASSWORD_RESET_FAIL","PASSWORD_RESET_SUCCESS","PASSWORD_RESET_CONFIRM_FAIL","PASSWORD_RESET_CONFIRM_SUCCESS","LOGOUT","load_user","dispatch","a","localStorage","getItem","config","headers","Authorization","Accept","axios","get","process","res","type","payload","data","connect","state","isAuthenticated","auth","login","email","password","body","JSON","stringify","post","useState","formData","setFormData","onChange","e","target","name","value","onSubmit","preventDefault","placeholder","required","minLength","signup","first_name","last_name","username","profile_type","accountCreated","setAccountCreated","options","key","verify","uid","token","match","verified","setVerified","style","marginTop","onClick","params","reset_password","requestSent","setRequestSent","reset_password_confirm","new_password","re_new_password","initialState","access","refresh","user","combineReducers","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","logout","redirect","setRedirect","logout_user","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","checkAuthenticated","code","children","useEffect","App","exact","path","component","Login","Signup","ResetPassword","ResetPasswordConfirm","Activate","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed1d40a4.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Home = () => (\n    <div className='container'>\n        <div class='jumbotron mt-5'>\n            <h1 class='display-4'>Welcome to Auth System!</h1>\n            <p class='lead'>This is an incredible authentication system with production level features!</p>\n            <hr class='my-4' />\n            <p>Click the Log In button</p>\n            <Link class='btn btn-primary btn-lg' to='/login' role='button'>Login</Link>\n        </div>\n    </div>\n);\n\nexport default Home;\n","export const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\nexport const SIGNUP_FAIL = \"SIGNUP_FAIL\";\nexport const ACTIVATION_SUCCESS = \"ACTIVATION_SUCCESS\";\nexport const ACTIVATION_FAIL = \"ACTIVATION_FAIL\";\nexport const USER_LOADED_SUCCESS = \"USER_LOADED_SUCCESS\";\nexport const USER_LOADED_FAIL = \"USER_LOADED_FAIL\";\nexport const AUTHENTICATED_SUCCESS = \"AUTHENTICATED_SUCCESS\";\nexport const AUTHENTICATED_FAIL = \"AUTHENTICATED_FAIL\";\nexport const PASSWORD_RESET_FAIL = \"PASSWORD_RESET_FAIL\";\nexport const PASSWORD_RESET_SUCCESS = \"PASSWORD_RESET_SUCCESS\";\nexport const PASSWORD_RESET_CONFIRM_FAIL = \"PASSWORD_RESET_CONFIRM_FAIL\";\nexport const PASSWORD_RESET_CONFIRM_SUCCESS = \"PASSWORD_RESET_CONFIRM_SUCCESS\";\nexport const LOGOUT = \"LOGOUT\";\n","import axios from \"axios\";\nimport {\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  USER_LOADED_SUCCESS,\n  USER_LOADED_FAIL,\n  AUTHENTICATED_SUCCESS,\n  AUTHENTICATED_FAIL,\n  PASSWORD_RESET_SUCCESS,\n  PASSWORD_RESET_FAIL,\n  PASSWORD_RESET_CONFIRM_SUCCESS,\n  PASSWORD_RESET_CONFIRM_FAIL,\n  SIGNUP_SUCCESS,\n  SIGNUP_FAIL,\n  ACTIVATION_SUCCESS,\n  ACTIVATION_FAIL,\n  LOGOUT,\n} from \"./types\";\n\nexport const load_user = () => async (dispatch) => {\n  if (localStorage.getItem(\"access\")) {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `JWT ${localStorage.getItem(\"access\")}`,\n        Accept: \"application/json\",\n      },\n    };\n\n    try {\n      const res = await axios.get(\n        `${process.env.REACT_APP_API_URL}/auth/users/me/`,\n        config\n      );\n\n      dispatch({\n        type: USER_LOADED_SUCCESS,\n        payload: res.data,\n      });\n    } catch (err) {\n      dispatch({\n        type: USER_LOADED_FAIL,\n      });\n    }\n  } else {\n    dispatch({\n      type: USER_LOADED_FAIL,\n    });\n  }\n};\n\nexport const checkAuthenticated = () => async (dispatch) => {\n  if (localStorage.getItem(\"access\")) {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    };\n\n    const body = JSON.stringify({ token: localStorage.getItem(\"access\") });\n\n    try {\n      const res = await axios.post(\n        `${process.env.REACT_APP_API_URL}/auth/jwt/verify/`,\n        body,\n        config\n      );\n\n      if (res.data.code !== \"token_not_valid\") {\n        dispatch({\n          type: AUTHENTICATED_SUCCESS,\n        });\n      } else {\n        dispatch({\n          type: AUTHENTICATED_FAIL,\n        });\n      }\n    } catch (err) {\n      dispatch({\n        type: AUTHENTICATED_FAIL,\n      });\n    }\n  } else {\n    dispatch({\n      type: AUTHENTICATED_FAIL,\n    });\n  }\n};\n\nexport const login = (email, password) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  const body = JSON.stringify({ email, password });\n\n  try {\n    const res = await axios.post(\n      `${process.env.REACT_APP_API_URL}/auth/jwt/create/`,\n      body,\n      config\n    );\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data,\n    });\n\n    dispatch(load_user());\n  } catch (err) {\n    dispatch({\n      type: LOGIN_FAIL,\n    });\n  }\n};\n\nexport const signup =\n  (first_name, last_name, email, password, username, profile_type) =>\n  async (dispatch) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const body = JSON.stringify({\n      first_name,\n      last_name,\n      email,\n      password,\n      username,\n      profile_type,\n    });\n\n    try {\n      const res = await axios.post(\n        `${process.env.REACT_APP_API_URL}/auth/users/`,\n        body,\n        config\n      );\n\n      dispatch({\n        type: SIGNUP_SUCCESS,\n        payload: res.data,\n      });\n    } catch (err) {\n      dispatch({\n        type: SIGNUP_FAIL,\n      });\n    }\n  };\n\nexport const verify = (uid, token) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  const body = JSON.stringify({ uid, token });\n\n  try {\n    await axios.post(\n      `${process.env.REACT_APP_API_URL}/auth/users/activation/`,\n      body,\n      config\n    );\n\n    dispatch({\n      type: ACTIVATION_SUCCESS,\n    });\n  } catch (err) {\n    dispatch({\n      type: ACTIVATION_FAIL,\n    });\n  }\n};\n\nexport const reset_password = (email) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  const body = JSON.stringify({ email });\n\n  try {\n    await axios.post(\n      `${process.env.REACT_APP_API_URL}/auth/users/reset_password/`,\n      body,\n      config\n    );\n\n    dispatch({\n      type: PASSWORD_RESET_SUCCESS,\n    });\n  } catch (err) {\n    dispatch({\n      type: PASSWORD_RESET_FAIL,\n    });\n  }\n};\n\nexport const reset_password_confirm =\n  (uid, token, new_password, re_new_password) => async (dispatch) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const body = JSON.stringify({ uid, token, new_password, re_new_password });\n\n    try {\n      await axios.post(\n        `${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`,\n        body,\n        config\n      );\n\n      dispatch({\n        type: PASSWORD_RESET_CONFIRM_SUCCESS,\n      });\n    } catch (err) {\n      dispatch({\n        type: PASSWORD_RESET_CONFIRM_FAIL,\n      });\n    }\n  };\n\nexport const logout = () => (dispatch) => {\n  dispatch({\n    type: LOGOUT,\n  });\n};\n","import React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../actions/auth\";\nimport axios from \"axios\";\n\nconst Login = ({ login, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const { email, password } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    login(email, password);\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div className=\"container mt-5\">\n      <h1>Sign In</h1>\n      <p>Sign into your Account</p>\n      <form onSubmit={(e) => onSubmit(e)}>\n        <div className=\"form-group\">\n          <input\n            className=\"form-control\"\n            type=\"email\"\n            placeholder=\"Email\"\n            name=\"email\"\n            value={email}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            className=\"form-control\"\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            value={password}\n            onChange={(e) => onChange(e)}\n            minLength=\"6\"\n            required\n          />\n        </div>\n        <button className=\"btn btn-primary\" type=\"submit\">\n          Login\n        </button>\n      </form>\n      <p className=\"mt-3\">\n        Don't have an account? <Link to=\"/signup\">Sign Up</Link>\n      </p>\n      <p className=\"mt-3\">\n        Forgot your Password? <Link to=\"/reset-password\">Reset Password</Link>\n      </p>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","import React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signup } from \"../actions/auth\";\n\nconst Signup = ({ signup, isAuthenticated }) => {\n  const [accountCreated, setAccountCreated] = useState(false);\n  const [formData, setFormData] = useState({\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n    password: \"\",\n    username: \"\",\n    profile_type: [\"STD\", \"PRF\"],\n  });\n\n  const { first_name, last_name, email, password, username, profile_type } =\n    formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    signup(first_name, last_name, email, password, username, profile_type);\n    setAccountCreated(true);\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/\" />;\n  }\n  if (accountCreated) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <div className=\"container mt-5\">\n      <h1>Sign Up</h1>\n      <p>Create your Account</p>\n      <form onSubmit={(e) => onSubmit(e)}>\n        <div className=\"form-group\">\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            placeholder=\"Username*\"\n            name=\"username\"\n            value={username}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <input\n            className=\"form-control\"\n            type=\"email\"\n            placeholder=\"Email*\"\n            name=\"email\"\n            value={email}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            className=\"form-control\"\n            type=\"password\"\n            placeholder=\"Password*\"\n            name=\"password\"\n            value={password}\n            onChange={(e) => onChange(e)}\n            minLength=\"6\"\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            placeholder=\"First Name*\"\n            name=\"first_name\"\n            value={first_name}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            placeholder=\"Last Name*\"\n            name=\"last_name\"\n            value={last_name}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <select\n            className=\"form-control\"\n            name=\"profile_type\"\n            value={[profile_type[0], profile_type[1]]}\n            options={profile_type}\n            onChange={(e) => onChange(e)}\n            required\n          >\n            <option value={profile_type[0]} key={profile_type[0]}>\n              Student\n            </option>\n            <option value={profile_type[1]} key={profile_type[1]}>\n              Professor\n            </option>\n          </select>\n        </div>\n        <button className=\"btn btn-primary\" type=\"submit\">\n          Register\n        </button>\n      </form>\n      <p className=\"mt-3\">\n        Already have an account? <Link to=\"/login\">Sign In</Link>\n      </p>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { signup })(Signup);\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { verify } from '../actions/auth';\n\nconst Activate = ({ verify, match }) => {\n    const [verified, setVerified] = useState(false);\n\n    const verify_account = e => {\n        const uid = match.params.uid;\n        const token = match.params.token;\n\n        verify(uid, token);\n        setVerified(true);\n    };\n\n    if (verified) {\n        return <Redirect to='/' />\n    }\n\n    return (\n        <div className='container'>\n            <div \n                className='d-flex flex-column justify-content-center align-items-center'\n                style={{ marginTop: '200px' }}\n            >\n                <h1>Verify your Account:</h1>\n                <button\n                    onClick={verify_account}\n                    style={{ marginTop: '50px' }}\n                    type='button'\n                    className='btn btn-primary'\n                >\n                    Verify\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default connect(null, { verify })(Activate);\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { reset_password } from '../actions/auth';\n\nconst ResetPassword = ({ reset_password }) => {\n    const [requestSent, setRequestSent] = useState(false);\n    const [formData, setFormData] = useState({\n        email: ''\n    });\n\n    const { email } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        reset_password(email);\n        setRequestSent(true);\n    };\n\n    if (requestSent) {\n        return <Redirect to='/' />\n    }\n\n    return (\n        <div className='container mt-5'>\n            <h1>Request Password Reset:</h1>\n            <form onSubmit={e => onSubmit(e)}>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='email'\n                        placeholder='Email'\n                        name='email'\n                        value={email}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <button className='btn btn-primary' type='submit'>Reset Password</button>\n            </form>\n        </div>\n    );\n};\n\nexport default connect(null, { reset_password })(ResetPassword);\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { reset_password_confirm } from '../actions/auth';\n\nconst ResetPasswordConfirm = ({ match, reset_password_confirm }) => {\n    const [requestSent, setRequestSent] = useState(false);\n    const [formData, setFormData] = useState({\n        new_password: '',\n        re_new_password: ''\n    });\n\n    const { new_password, re_new_password } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        const uid = match.params.uid;\n        const token = match.params.token;\n\n        reset_password_confirm(uid, token, new_password, re_new_password);\n        setRequestSent(true);\n    };\n\n    if (requestSent) {\n        return <Redirect to='/' />\n    }\n\n    return (\n        <div className='container mt-5'>\n            <form onSubmit={e => onSubmit(e)}>\n            <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='password'\n                        placeholder='New Password'\n                        name='new_password'\n                        value={new_password}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='password'\n                        placeholder='Confirm New Password'\n                        name='re_new_password'\n                        value={re_new_password}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                        required\n                    />\n                </div>\n                <button className='btn btn-primary' type='submit'>Reset Password</button>\n            </form>\n        </div>\n    );\n};\n\nexport default connect(null, { reset_password_confirm })(ResetPasswordConfirm);\n","import {\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  USER_LOADED_SUCCESS,\n  USER_LOADED_FAIL,\n  AUTHENTICATED_SUCCESS,\n  AUTHENTICATED_FAIL,\n  PASSWORD_RESET_SUCCESS,\n  PASSWORD_RESET_FAIL,\n  PASSWORD_RESET_CONFIRM_SUCCESS,\n  PASSWORD_RESET_CONFIRM_FAIL,\n  SIGNUP_SUCCESS,\n  SIGNUP_FAIL,\n  ACTIVATION_SUCCESS,\n  ACTIVATION_FAIL,\n  LOGOUT,\n} from \"../actions/types\";\n\nconst initialState = {\n  access: localStorage.getItem(\"access\"),\n  refresh: localStorage.getItem(\"refresh\"),\n  isAuthenticated: null,\n  user: null,\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case AUTHENTICATED_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: true,\n      };\n    case LOGIN_SUCCESS:\n      localStorage.setItem(\"access\", payload.access);\n      localStorage.setItem(\"refresh\", payload.refresh);\n      return {\n        ...state,\n        isAuthenticated: true,\n        access: payload.access,\n        refresh: payload.refresh,\n      };\n    case SIGNUP_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: false,\n      };\n    case USER_LOADED_SUCCESS:\n      return {\n        ...state,\n        user: payload,\n      };\n    case AUTHENTICATED_FAIL:\n      return {\n        ...state,\n        isAuthenticated: false,\n      };\n    case USER_LOADED_FAIL:\n      return {\n        ...state,\n        user: null,\n      };\n    case LOGIN_FAIL:\n    case SIGNUP_FAIL:\n    case LOGOUT:\n      localStorage.removeItem(\"access\");\n      localStorage.removeItem(\"refresh\");\n      return {\n        ...state,\n        access: null,\n        refresh: null,\n        isAuthenticated: false,\n        user: null,\n      };\n    case PASSWORD_RESET_SUCCESS:\n    case PASSWORD_RESET_FAIL:\n    case PASSWORD_RESET_CONFIRM_SUCCESS:\n    case PASSWORD_RESET_CONFIRM_FAIL:\n    case ACTIVATION_SUCCESS:\n    case ACTIVATION_FAIL:\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport auth from './auth';\n\nexport default combineReducers({\n    auth\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React, { Fragment, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { logout } from '../actions/auth';\n\nconst Navbar = ({ logout, isAuthenticated }) => {\n    const [redirect, setRedirect] = useState(false);\n\n    const logout_user = () => {\n        logout();\n        setRedirect(true);\n    };\n\n    const guestLinks = () => (\n        <Fragment>\n            <li className='nav-item'>\n                <Link className='nav-link' to='/login'>Login</Link>\n            </li>\n            <li className='nav-item'>\n                <Link className='nav-link' to='/signup'>Sign Up</Link>\n            </li>\n        </Fragment>\n    );\n\n    const authLinks = () => (\n        <li className='nav-item'>\n            <a className='nav-link' href='#!' onClick={logout_user}>Logout</a>\n        </li>\n    );\n\n    return (\n        <Fragment>\n            <nav className='navbar navbar-expand-lg navbar-light bg-light'>\n                <Link className='navbar-brand' to='/'>Auth System</Link>\n                <button \n                    className='navbar-toggler' \n                    type='button' \n                    data-toggle='collapse' \n                    data-target='#navbarNav' \n                    aria-controls='navbarNav' \n                    aria-expanded='false' \n                    aria-label='Toggle navigation'\n                >\n                    <span className='navbar-toggler-icon'></span>\n                </button>\n                <div className='collapse navbar-collapse' id='navbarNav'>\n                    <ul className='navbar-nav'>\n                        <li className='nav-item active'>\n                            <Link className='nav-link' to='/'>Home <span className='sr-only'>(current)</span></Link>\n                        </li>\n                        {isAuthenticated ? authLinks() : guestLinks()}\n                    </ul>\n                </div>\n            </nav>\n            {redirect ? <Redirect to='/' /> : <Fragment></Fragment>}\n        </Fragment>\n    );\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { logout })(Navbar);\n","import React, { useEffect } from 'react';\nimport Navbar from '../components/Navbar';\nimport { connect } from 'react-redux';\nimport { checkAuthenticated, load_user } from '../actions/auth';\n\nconst Layout = ({ checkAuthenticated, load_user, children }) => {\n    useEffect(() => {\n        checkAuthenticated();\n        load_user();\n    }, []);\n\n    return (\n        <div>\n            <Navbar />\n            {children}\n        </div>\n    );\n};\n\nexport default connect(null, { checkAuthenticated, load_user })(Layout);\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Home from \"./containers/Home\";\nimport Login from \"./containers/Login\";\nimport Signup from \"./containers/Signup\";\nimport Activate from \"./containers/Activate\";\nimport ResetPassword from \"./containers/ResetPassword\";\nimport ResetPasswordConfirm from \"./containers/ResetPasswordConfirm\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport Layout from \"./hocs/Layout\";\n\nconst App = () => (\n  <Provider store={store}>\n    <Router>\n      <Layout>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/signup\" component={Signup} />\n          <Route exact path=\"/reset-password\" component={ResetPassword} />\n          <Route\n            exact\n            path=\"/password/reset/confirm/:uid/:token\"\n            component={ResetPasswordConfirm}\n          />\n          <Route exact path=\"/activate/:uid/:token\" component={Activate} />\n        </Switch>\n      </Layout>\n    </Router>\n  </Provider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}